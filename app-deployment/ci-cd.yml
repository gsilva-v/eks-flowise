# .github/workflows/deploy.yml

name: Deploy Flowise to EKS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Passo 1: Check-out o código do repositório
      - name: Checkout code
        uses: actions/checkout@v2

      # Passo 2: Configurar AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Passo 3: Login no ECR
      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Passo 4: Pull da imagem oficial do Flowise do Docker Hub
      - name: Pull Flowise Docker image from Docker Hub
        run: |
          docker pull flowise/flowise:latest
          docker tag flowise/flowise:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/flowise:latest

      # Passo 5: Push da imagem Docker para o ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/flowise:latest

      # Passo 6: Atualizar o deployment no EKS
      - name: Update EKS deployment
        run: |
          kubectl set image deployment/flowise-deployment flowise=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/flowise:latest
          kubectl rollout status deployment/flowise-deployment

      # Passo 7: Validar o Deploy (Opcional)
      - name: Validate Deployment
        run: |
          kubectl get pods

        
